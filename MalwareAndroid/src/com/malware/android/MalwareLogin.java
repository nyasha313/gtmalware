package com.malware.android;

import com.malware.common.dto.ServerRequest;
import com.malware.common.dto.ServerResponse;
import com.malware.common.dto.User;
import com.malware.common.dto.ServerRequest.ServerMethod;
import com.malware.common.dto.ServerResponse.ResponseCode;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MalwareLogin extends Activity{
	
	Context myContext = this;
	
	private boolean CheckUserNamePassword(String u, String p)
	{
		ServerRequest s = new ServerRequest();
		User user = new User();
		user.setEmail(u);
		user.setPassword(p);
		s.setUser(user);
		s.setServerMethod(ServerMethod.VERIFY_USER);
		ServerResponse response = MalwareHttpSender.sendData(s);
		return false;
	}
    
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.malware_login);
    	Button login = (Button) findViewById(R.id.malware_login_login);
    	Button exit = (Button) findViewById(R.id.malware_login_exit);
    	Button signup = (Button) findViewById(R.id.malware_login_signup);
    	final EditText userNameBox = (EditText)findViewById(R.id.malware_login_username);
		final EditText passwordBox = (EditText)findViewById(R.id.malware_login_password);
    	
		login.setOnClickListener(new View.OnClickListener() {
			public void onClick(View view) {
				String userName = userNameBox.getText().toString();
				String password = passwordBox.getText().toString();
				if((userName.equalsIgnoreCase(""))||(password.equalsIgnoreCase("")))
				{
					Notify.notification(myContext, "D'oh!", "Enter valid username or password");	
				}
				else
				{
					
					MalwareDefaults.loginEmailAddress = userName;
					Intent myIntent = new Intent(view.getContext(), MalwareRequest.class);
					startActivity(myIntent);
			/*		
					ServerRequest s = new ServerRequest();
					User user = new User();
					user.setEmail(userName);
					user.setPassword(password);
					s.setUser(user);
					s.setServerMethod(ServerMethod.VERIFY_USER);
					ServerResponse response = MalwareHttpSender.sendData(s);
					if(response.getResponseCode() == ResponseCode.SUCCESS)
					{
						MalwareDefaults.loginEmailAddress = userName;
						Intent myIntent = new Intent(view.getContext(), MalwareRequest.class);
						startActivity(myIntent);
					}
					else
						Notify.notification(myContext, "D'oh!", response.getReponseMessage());
						*/
				}
			}
		});
		
		exit.setOnClickListener(new View.OnClickListener() {
			public void onClick(View view) {
				Intent myIntent = new Intent(view.getContext(), MalwareExit.class);
				startActivity(myIntent);
			}
		});
		
		signup.setOnClickListener(new View.OnClickListener() {
			public void onClick(View view) {
				Intent myIntent = new Intent(view.getContext(), MalwareSignup.class);
				startActivity(myIntent);
			}
		});

    }
}
