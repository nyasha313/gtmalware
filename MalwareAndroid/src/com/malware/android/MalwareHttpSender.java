package com.malware.android;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;

import android.util.Log;

import com.google.gson.Gson;
import com.malware.common.dto.ServerRequest;
import com.malware.common.dto.ServerResponse;
import com.malware.common.constants.*;

public class MalwareHttpSender {
	
	MalwareHttpSender()
	{
	}
	
	public static ServerResponse sendData(ServerRequest request)
	{
		Gson gson = new Gson();
		String data = gson.toJson(request);
		String bufferToSend = null;
		ServerResponse serverResponse = null;
		
		try 
		{
			bufferToSend = URLEncoder.encode(Constants.URL.SERVER_REQUEST_DATA, "UTF-8") + "=" + URLEncoder.encode(data, "UTF-8");
		} 
		catch (UnsupportedEncodingException e1) {
			
			e1.printStackTrace();
		}
		
		try {

			URL url = new URL(Constants.SERVER_API_URL);
			URLConnection conn = url.openConnection();
			conn.setDoOutput(true);
			OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
			wr.write(bufferToSend);
			wr.flush();
			
			// Get the response
			BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
			String line = "",temp;
			while ((temp = rd.readLine()) != null) {
				line.concat(temp);
				Log.i("Malware-Server-Reponse", line);
			}

			wr.close();
			rd.close();

			serverResponse = gson.fromJson(line, ServerResponse.class);
			
		} 
		catch (Exception e) {
			e.printStackTrace();
		}
		return serverResponse;
	}
	
}
