package com.malware.android;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import com.malware.common.dto.ServerRequest;
import com.malware.common.dto.ServerResponse;
import com.malware.common.dto.Trip;
import com.malware.common.dto.User;
import com.malware.common.dto.ServerRequest.ServerMethod;
import com.malware.common.dto.ServerResponse.ResponseCode;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;

public class MalwareCurrent extends Activity 
{
	private ServerResponse response = null;
	private String u = null;
	private List<Trip> triplist = null;
	private Vector<String> dummy;
	ProgressDialog dialog = null;
	TripAdapter trip_adapter = null;
	Handler currentHandler = new Handler();
	ListView lv, lv_matches;
	ArrayAdapter dummyAdapter = null;

	Context myContext;

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.malware_current);
		myContext = this;

		Bundle b = this.getIntent().getExtras();
		u = b.getString("riderOrDriver");

		Button newCarpool = (Button) findViewById(R.id.malware_current_new);
		newCarpool.setOnClickListener(new View.OnClickListener() {
			public void onClick(View view) {
				Intent myIntent = new Intent(myContext, MalwareMaps.class);
				myIntent.putExtra("riderOrDriver", u);
				startActivity(myIntent);
			}
		});


		lv = (ListView)findViewById(R.id.malware_current_list);
		
		
		dummy = new Vector<String>();
		dummy.add("hi");
		dummy.add("list");
		

		Thread getCurrentThread = new Thread(new Runnable(){
			@Override
			public void run() {
				ServerRequest s = new ServerRequest();
				User user = new User();
				user.setEmail(MalwareDefaults.loginEmailAddress);
				s.setUser(user);
				if(u.equalsIgnoreCase("rider"))
				{
					s.setServerMethod(ServerMethod.SEARCH_RIDER_TRIPS);	
				}

				if(u.equalsIgnoreCase("driver"))
				{
					s.setServerMethod(ServerMethod.SEARCH_DRIVER_TRIPS);	
				}
				response = MalwareHttpSender.sendData(s);

				currentHandler.post(new Runnable(){
					public void run() {
						if(response.getResponseCode() == ResponseCode.SUCCESS)
						{
							dialog.cancel();
							triplist = response.getTrips();
							lv.setChoiceMode(lv.CHOICE_MODE_MULTIPLE);
							trip_adapter = new TripAdapter(myContext, 
									android.R.layout.simple_list_item_multiple_choice, triplist);
							lv.setAdapter(trip_adapter);
							//lv_matches.setAdapter(trip_adapter);
						}
					}
				});
			}

		});
		getCurrentThread.start();
		dialog = ProgressDialog.show(myContext, "", 
				"Getting your information...", true);

		lv.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> a, View v, int position, long id) {

				/*Builder adb=new AlertDialog.Builder(MalwareCurrent.this);
				adb.setTitle("LVSelectedItemExample");
				adb.setMessage("Selected Item is = "+lv.getItemAtPosition(position));
				adb.setPositiveButton("Ok", null);
				adb.show();*/
				
				Dialog dialog1 = new Dialog(myContext); 
				dialog1.setContentView(R.layout.malware_matches); 
				dialog1.setTitle("Matches found!!!"); 
				dialog1.setCancelable(true);
				dialog1.show();
				
				lv_matches = (ListView)dialog1.findViewById(R.id.malware_match_list);
				
				lv_matches.setChoiceMode(lv_matches.CHOICE_MODE_MULTIPLE);
				lv_matches.setAdapter(new ArrayAdapter<String>(myContext, android.R.layout.simple_list_item_multiple_choice, dummy));
				


			}
		});
	}
}