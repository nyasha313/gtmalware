package com.malware.server;
import java.io.IOException;
import java.util.List;

import javax.jdo.PersistenceManager;
import javax.servlet.http.*;

import com.malware.common.constants.Constants;
import com.malware.server.maps.Route;

@SuppressWarnings("serial")
public class MalwareServerServlet extends HttpServlet {
	
	public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		resp.setContentType("text/plain");
		
		resp.getWriter().println("You have reached the server API for " + Constants.PROJECT_NAME + ".");
		resp.getWriter().println("If you want to access the API you're better of POSTing to this URL.");
		
		/*
		User user = new User("name", 0.1, "promotion", "address", 0.5, 0.6);
		Gson gson = new Gson();
		System.out.println(gson.toJson(user));
		
		LatLng start = new LatLng(34.019968, -118.289988);
		LatLng end = new LatLng(38.019968, -118.289988);
		
		Route route = GoogleMaps.getRoute(start, end);
		
		resp.getWriter().println("Driving Distance between: " + start + " and " + end + " is: " +
								 route.getDistanceInMetres());
		
		resp.getWriter().println("Making this route persistent.");
		
		// Make the Route object persistent.
		PersistenceManager pm = PMF.get().getPersistenceManager();
        try {
        	route.makePersistable();
            pm.makePersistent(route);
        } finally {
            pm.close();
        }
        
        // Displaying all the current persistent routes.
        resp.getWriter().println("Objects in the store: ");
        
        pm = PMF.get().getPersistenceManager();
        String query = "select from " + Route.class.getName();
        List<Route> routes = (List<Route>) pm.newQuery(query).execute();
        if (routes.isEmpty()) {
        	resp.getWriter().println("No objects in store.");	
        } else {
        	int count = routes.size();
        	resp.getWriter().println("Count of objects in store: " + count);
        }
        */
	}
	
	/**
	 * Our dispatcher method which launches the required methods based on the parameters
	 * received as input.
	 */
	public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		resp.setContentType("text/plain");
		
		// Figure out which SERVER method is being requested.
		String serverMethod = req.getParameter(Constants.URL.SERVER_METHOD_NAME);
		
		if (serverMethod.equals(Constants.SERVER_METHOD.STORE_NEW_USER.name())) {
			resp.getWriter().println("Storing due to: " + serverMethod);
		} else if (serverMethod.equals(Constants.SERVER_METHOD.GET_USER_INFO.name())) {
			resp.getWriter().println("Method: " + serverMethod + "  currently not supported.");
		} else if (serverMethod.equals(Constants.SERVER_METHOD.TEST_CODE.name())) {
			System.out.println("Executing arbitrary test code.");
			resp.getWriter().println("Executing arbitrary test code. Output is:");
			resp.getWriter().println(testCode());
		} else {
			resp.getWriter().println("We really have no idea what you're trying to say.");
		}
	}
	
	/**
	 * Really experimental code which we just put here for quick development.
	 */
	public String testCode() {
		String output = "";
		
		PersistenceManager pm = PMF.get().getPersistenceManager();
		
		String queryString = "select from " + Route.class.getName();
		List<Route> routes = (List<Route>) pm.newQuery(queryString).execute();
		if (routes.isEmpty()) {
        	output = "No objects in store.";	
        } else {
        	int count = routes.size();
        	output = "Count of objects in store: " + count;
        }
		
        pm.close();
        
        return output;
	}
}
