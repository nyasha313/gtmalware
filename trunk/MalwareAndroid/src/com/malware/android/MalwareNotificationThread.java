package com.malware.android;

import com.malware.common.constants.Constants;
import com.malware.common.dto.ServerRequest;
import com.malware.common.dto.ServerResponse;
import com.malware.common.dto.Trip;
import com.malware.common.dto.User;
import com.malware.common.dto.ServerRequest.ServerMethod;
import com.malware.common.dto.ServerResponse.ResponseCode;

import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;

class MalwareNotificationThread implements Runnable {
	
	private static int notificationCount = 0;
	
	Activity activity_object;
	
	public MalwareNotificationThread(Activity activity)
	{
		activity_object = activity;
	}
	
    public void run()
    {
    	NotificationManager nm = (NotificationManager) activity_object.getSystemService(Context.NOTIFICATION_SERVICE);
    	// cancel the notification that we started in SMSNotifyExample

    	Context context = activity_object.getApplicationContext();
    	
    	int ICON = R.drawable.driver;
		
		while(true) {		
			ServerRequest request = new ServerRequest();
			request.setServerMethod(ServerMethod.SEARCH_RIDERS_TRIPS);
			
			User user = new User();
			user.setEmail(MalwareDefaults.loginEmailAddress);
			request.setUser(user);
			
			ServerResponse response = MalwareHttpSender.sendData(request);
			
			if (response.getResponseCode() == ResponseCode.SUCCESS) {
				
				// Go over the response.
				for (int i = 0; i < response.getTrips().size(); ++i) {
					Trip trip = response.getTrips().get(i);
					
					if (trip.isAssigned() == true && trip.isAssignedNotified() == false) {
						// Create a new notification.
						Notification notification = new Notification(ICON, Constants.PROJECT_NAME, System.currentTimeMillis());
						
						CharSequence contentTitle = "We found you a driver!\n";
						CharSequence contentText = "You're trip from " + trip.getSourceText() + " to " + trip.getDestinationText() + " has been matched.";
						
						Intent notificationIntent = new Intent(activity_object, MalwareCurrent.class);
						PendingIntent contentIntent= PendingIntent.getActivity(activity_object, 0, notificationIntent, 0);
					
						notification.setLatestEventInfo(context, contentTitle, contentText, contentIntent);
						
						nm.notify(notificationCount++, notification);
					}
				}
			}
			
			request = new ServerRequest();
			request.setServerMethod(ServerMethod.SEARCH_DRIVER_TRIPS);
			request.setUser(user);
			
			response = MalwareHttpSender.sendData(request);
			
			if (response.getResponseCode() == ResponseCode.SUCCESS) {
				// Go over the response.
				for (int i = 0; i < response.getTrips().size(); ++i) {
					Trip trip = response.getTrips().get(i);					
					for (int j = 0; j < trip.getPassengerEmailAddressesNotified().size(); ++j) {
						if (trip.getPassengerEmailAddressesNotified().get(j) == false) {
							// Create new notification.
							Notification notification = new Notification(ICON, Constants.PROJECT_NAME, System.currentTimeMillis());
							
							CharSequence contentTitle = "We found you a rider!\n";
							CharSequence contentText = trip.getPassengerEmailAddresses().get(j) + " will join you in your trip from " + trip.getSourceText() + " to " + trip.getDestinationText() + ".";
							
							Intent notificationIntent = new Intent(activity_object, MalwareCurrent.class);
							PendingIntent contentIntent= PendingIntent.getActivity(activity_object, 0, notificationIntent, 0);
						
							notification.setLatestEventInfo(context, contentTitle, contentText, contentIntent);
							
							nm.notify(notificationCount++, notification);
						}
					}
				}
			}
			
			// Sleep for some time.
			try {
				Thread.sleep(10 * 1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    }
    }
}