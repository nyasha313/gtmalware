package com.malware.android;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;

import com.malware.common.dto.ServerRequest;
import com.malware.common.dto.ServerResponse;
import com.malware.common.dto.Trip;
import com.malware.common.dto.User;
import com.malware.common.dto.ServerRequest.ServerMethod;
import com.malware.common.dto.ServerResponse.ResponseCode;

import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;

public class MalwareCurrent extends Activity 
{
	private ServerResponse response = null;
	private String u = null;
	private List<Trip> triplist = null;
	
	ProgressDialog dialog = null;
	TripAdapter trip_adapter = null;
	Handler currentHandler = new Handler();
	ListView lv, lv_matches;
	
	List<String> trips = null;
	List<Trip> triplist1 = null;
	Trip selectedTrip = null;
	Dialog dialog1 = null;
	Context myContext;

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.malware_current);
		myContext = this;

		Bundle b = this.getIntent().getExtras();
		u = b.getString("riderOrDriver");

		Button newCarpool = (Button) findViewById(R.id.malware_current_new);
		newCarpool.setOnClickListener(new View.OnClickListener() {
			public void onClick(View view) {
				Intent myIntent = new Intent(myContext, MalwareMaps.class);
				myIntent.putExtra("riderOrDriver", u);
				startActivity(myIntent);
			}
		});


		lv = (ListView)findViewById(R.id.malware_current_list);


		Thread getCurrentThread = new Thread(new Runnable(){
			@Override
			public void run() {
				ServerRequest s = new ServerRequest();
				User user = new User();
				user.setEmail(MalwareDefaults.loginEmailAddress);
				s.setUser(user);
				if(u.equalsIgnoreCase("rider"))
				{
					s.setServerMethod(ServerMethod.SEARCH_RIDER_TRIPS);	
				}

				if(u.equalsIgnoreCase("driver"))
				{
					s.setServerMethod(ServerMethod.SEARCH_DRIVER_TRIPS);	
				}
				response = MalwareHttpSender.sendData(s);

				currentHandler.post(new Runnable(){
					public void run() {
						if(response.getResponseCode() == ResponseCode.SUCCESS)
						{
							triplist = response.getTrips();
							lv.setChoiceMode(lv.CHOICE_MODE_MULTIPLE);
							trip_adapter = new TripAdapter(myContext, 
									android.R.layout.simple_list_item_multiple_choice, triplist);
							lv.setAdapter(trip_adapter);
							dialog.cancel();

						}
					}
				});
			}

		});
		getCurrentThread.start();
		dialog = ProgressDialog.show(myContext, "", 
				"Getting your information...", true);

		lv.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> a, View v, int position, long id) {

				selectedTrip = triplist.get(position);
				if((selectedTrip.isDriverTrip()) && (selectedTrip.getNumSeatsAvailable() == 0))
				{
					Dialog dialog1 = new Dialog(myContext); 
					dialog1.setContentView(R.layout.malware_trip_popup); 
					dialog1.setTitle("Your carpool has been confirmed!");

					TextView src = (TextView) dialog1.findViewById(R.id.sourcetext);					
					TextView dest = (TextView) dialog1.findViewById(R.id.destinationtext);
					TextView via = (TextView) dialog1.findViewById(R.id.viapointstext);
					TextView startTime = (TextView) dialog1.findViewById(R.id.earlystartdatetime);
					TextView contact = (TextView) dialog1.findViewById(R.id.useremailaddress);
					
					TextView passEmail = (TextView) dialog1.findViewById(R.id.passengeremailaddress);
					TextView isDriver = (TextView) dialog1.findViewById(R.id.driverrider);
					TextView numSeats = (TextView) dialog1.findViewById(R.id.numseats);
					
					via.setVisibility(View.GONE);
					isDriver.setVisibility(View.GONE);
					numSeats.setVisibility(View.GONE);
					
					Button back = (Button) findViewById(R.id.canceltrip);
					
					
					src.setText("From: "+selectedTrip.getSourceText());
					dest.setText("To: "+selectedTrip.getDestinationText());
					Date d = new Date(selectedTrip.getStartDateTime());
					SimpleDateFormat format =
				           new SimpleDateFormat("EEE MMM dd yyyy HH:mm");
					
					startTime.setText("When: "+format.format(d));
					//contact.setText("Contact: "+selectedTrip.getUserEmailAddress());
					List<String> pass = selectedTrip.getPassengerEmailAddresses();
					if(pass.size() > 0)
					{
						String tStr="Passengers: ";
						for(int i = 0; i<pass.size(); i++)
						{
							tStr = tStr+pass.get(i)+",";
						}
						tStr = tStr.replace(tStr.charAt(tStr.lastIndexOf(',')),' ');
						passEmail.setText(tStr);
					}
					
					
					List<String> vList =  selectedTrip.getViaPointsText();

					if(vList.size() > 0)
					{
						String tStr="";
						for(int i = 0; i<vList.size(); i++)
						{
							tStr = tStr+vList.get(i);
						}
						via.setText(tStr);
						via.setVisibility(View.VISIBLE);
					}

					else
						via.setVisibility(View.GONE);
					
					dialog1.setCancelable(true);
					dialog1.show();
				}
				else if((!selectedTrip.isDriverTrip()) && (selectedTrip.isAssigned()))
				{
					Dialog dialog1 = new Dialog(myContext); 
					dialog1.setContentView(R.layout.malware_trip_popup); 
					dialog1.setTitle("Your carpool has been confirmed!");
					
					TextView src = (TextView) dialog1.findViewById(R.id.sourcetext);					
					TextView dest = (TextView) dialog1.findViewById(R.id.destinationtext);
					TextView via = (TextView) dialog1.findViewById(R.id.viapointstext);
					TextView startTime = (TextView) dialog1.findViewById(R.id.earlystartdatetime);
					TextView contact = (TextView) dialog1.findViewById(R.id.useremailaddress);
					
					TextView passEmail = (TextView) dialog1.findViewById(R.id.passengeremailaddress);
					TextView isDriver = (TextView) dialog1.findViewById(R.id.driverrider);
					TextView numSeats = (TextView) dialog1.findViewById(R.id.numseats);
					
					via.setVisibility(View.GONE);
					passEmail.setVisibility(View.GONE);
					isDriver.setVisibility(View.GONE);
					numSeats.setVisibility(View.GONE);
					
					
					Button back = (Button) dialog1.findViewById(R.id.canceltrip);

					back.setOnClickListener(new OnClickListener() {

						@Override
						public void onClick(View v) {
							setResult(RESULT_CANCELED);
							finish();
						}
						
					});
					
					src.setText("From: "+selectedTrip.getSourceText());
					dest.setText("To: "+selectedTrip.getDestinationText());
					
					Date d = new Date(selectedTrip.getStartDateTime());
					SimpleDateFormat format =
						new SimpleDateFormat("EEE MMM dd yyyy HH:mm");
					
					startTime.setText("When: "+format.format(d));
					//contact.setText("Contact: "+selectedTrip.getUserEmailAddress());
					List<String> vList =  selectedTrip.getViaPointsText();

					if(vList.size() > 0)
					{
						String tStr="Via :";
						for(int i = 0; i<vList.size(); i++)
						{
							tStr = tStr+vList.get(i);
						}
						via.setText(tStr);
						via.setVisibility(View.VISIBLE);
					}

					else
						via.setVisibility(View.GONE);


					dialog1.setCancelable(true);
					dialog1.show();
				}
				else
				{
					ServerRequest s = new ServerRequest();
					User user = new User();
					user.setEmail(MalwareDefaults.loginEmailAddress);
					s.setUser(user);
					s.setTrip(selectedTrip);
					s.setServerMethod(ServerMethod.MATCH_TRIP);

					response = MalwareHttpSender.sendData(s);
					currentHandler.post(new Runnable(){
						public void run() {
							if(response.getResponseCode() == ResponseCode.SUCCESS)
							{
								dialog1 = new Dialog(myContext); 
								dialog1.setContentView(R.layout.malware_matches); 
								dialog1.setTitle("Matches found!"); 
								dialog1.setCancelable(true);

								triplist1 = response.getTrips();
								if((triplist1 == null) || (response.getTrips().size() == 0))
								{
									dialog.cancel();
									Notify.notification(myContext, "Message", "This request is yet to be matched!");
								}
								else
								{
									trips = new ArrayList<String>();
									for(int i = 0; i<triplist1.size(); i++)
									{
										Trip temp = triplist1.get(i);
										String tripStr = temp.getSourceText()+ " to "+temp.getDestinationText();
										/*
									List<String>tempVia = temp.getViaPointsText();
									if(tempVia != null)
									{
										for(int j = 0; j<tempVia.size(); j++)
										{
											tripStr = tripStr+tempVia.get(j);
										}
									}

									Date tempDate = new Date(temp.getStartDateTime());
									tripStr = tripStr+ " on " + tempDate.toLocaleString();
										 */
										trips.add(tripStr);
									}

									lv_matches = (ListView)dialog1.findViewById(R.id.malware_match_list);

									
									ArrayAdapter<String> adapter1 = null;
									if(selectedTrip.isDriverTrip())
									{
										lv_matches.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
										adapter1 = new ArrayAdapter<String>(myContext, 
												android.R.layout.simple_list_item_multiple_choice, trips);
									}
									else
									{
										lv_matches.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
										adapter1 = new ArrayAdapter<String>(myContext, 
												android.R.layout.simple_list_item_single_choice, trips);
									}
									
									lv_matches.setAdapter(adapter1);
									
									lv_matches.setOnItemClickListener(new OnItemClickListener() {
										@Override
										public void onItemClick(AdapterView<?> a, View v, int position, long id) {

										}
									
									});
									
									Button confirm = (Button)dialog1.findViewById(R.id.malware_confirmTrip);
									confirm.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											
											List<Trip> toSend = new ArrayList<Trip>();
											for (int i = 0; i < lv_matches.getCount(); i++) 
											{
												if (lv_matches.isItemChecked(i)) 
												{
													toSend.add(triplist1.get(i));
												} 
											}
											ServerRequest request = new ServerRequest();
											request.setUsersTrip(selectedTrip);
											request.setConfirmedWithTrips(toSend);
											request.setServerMethod(ServerMethod.CONFIRM_TRIP);
											response = MalwareHttpSender.sendData(request);
											if(response.getResponseCode() == ResponseCode.SUCCESS)
											{
												dialog1.cancel();
												Notify.notification(myContext, "Message","Trip Confirmed!");
											}
										}
									});
									dialog.cancel();
									dialog1.show();
								}
							}
						}

					});
					dialog.show();
				}
			}
		});
	}
}