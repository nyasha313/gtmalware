package com.example.MapsAndroid;

import java.io.IOException;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import com.example.MapsAndroid.DrivingDirections.Mode;
import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.Overlay;
import com.google.android.maps.OverlayItem;
import com.google.android.maps.Projection;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.DashPathEffect;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Point;
import android.graphics.drawable.Drawable;
import android.location.Address;
import android.location.Geocoder;
import android.os.Bundle;
import android.widget.Toast;

public class Maps extends MapActivity implements DrivingDirections.IDirectionsListener {

	List<Overlay> mapOverlays;
	Drawable drawable;
	HelloItemizedOverlay itemizedOverlay;
	MapView mapView;
	//Canvas canvas = new Canvas();
	LocationOverlay lineObj;
	

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		mapView = (MapView) findViewById(R.id.mapview);
		mapView.setBuiltInZoomControls(true);
		//mapView.draw(canvas);

		mapOverlays = mapView.getOverlays();
		drawable = this.getResources().getDrawable(R.drawable.icon);
		itemizedOverlay = new HelloItemizedOverlay(drawable);

		//String address = "Atlanta";
		//Context context = getApplicationContext();

		GeoPoint p = new GeoPoint(19240000,-99120000);
		MapController mc = mapView.getController();

		Geocoder geoCoder = new Geocoder(this, Locale.getDefault());    
		try {	
			//Map<AddressComponent, String> parsedAddr  = AddressParser.parseAddress("Google Inc, 1600 Amphitheatre Parkway, Mountain View, CA 94043");

			//List<Address> addresses = geoCoder.getFromLocationName("empire state building", 5);
			/*List<Address> addresses = geoCoder.getFromLocation(p.getLatitudeE6()/1E6, p.getLongitudeE6()/1E6, 1);
			toastHere(String.valueOf(addresses.size()));
			if (addresses.size() > 0) {
				toastHere("here!");
				p = new GeoPoint(
						(int) (addresses.get(0).getLatitude() * 1E6), 
						(int) (addresses.get(0).getLongitude() * 1E6));
				mc.animateTo(p);    
				mapView.invalidate();
			}    */
		} catch (Exception e) {
			toastHere(String.valueOf(e));
		}

		GeoPoint point = new GeoPoint(25774265, -80193658);
		//OverlayItem overlayitem = new OverlayItem(point, "", "");

		GeoPoint endPoint = new GeoPoint(33748995,-84387982);
		//OverlayItem endOverlayitem = new OverlayItem(endPoint, "", "");

		mc.animateTo(point);
		DrivingDirections.Mode mode = Mode.DRIVING;
		DrivingDirections directions = DrivingDirectionsFactory.createDrivingDirections(); 
		directions.driveTo(point, endPoint, mode, this);

		//drawIconOnScreen(endPoint);
		//MyOverlay obj = new MyOverlay();
		//obj.draw(canvas, mapView, true);
		//this.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("http://maps.google.com/maps?f=d&source=s_d&saddr=84+5th+St,+Atlanta,+GA+30308-1031+(Georgia+Institute+of+Technology)&daddr=470+16th+St+NW,+Atlanta,+GA+30318&hl=en&geocode=CUZTZpPWHvPDFSBiAwIdaTv4-iH9-1aO3W8iyg%3BFdeOAwIdaQv4-im55Q0E7gT1iDE84YLOLY0G7w&mra=pe&mrcr=0&sll=33.779466,-84.400969&sspn=0.032603,0.077162&ie=UTF8&z=15")));

	}

	public void drawIconOnScreen(GeoPoint pointOnScreen) {
		//OverlayItem item = new OverlayItem(pointOnScreen,"","");
		//itemizedOverlay.addOverlay(item);
		//mapOverlays.add(itemizedOverlay);
		List<Overlay> listOfOverlays = mapView.getOverlays();
        listOfOverlays.clear();
        listOfOverlays.add(lineObj);        
 
        //mapView.invalidate();
	}
	
	public void toastHere(CharSequence text) {
		Context context = getApplicationContext();
		int duration = Toast.LENGTH_LONG;

		Toast toast = Toast.makeText(context, text, duration);
		toast.show();
	}

	@Override
	protected boolean isRouteDisplayed() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public void onDirectionsAvailable(Route route, Mode mode) {
		// TODO Auto-generated method stub
		List<GeoPoint> geoPoints = route.getGeoPoints();
		int size = geoPoints.size();
		toastHere("Available! " + String.valueOf(size));

		List<Overlay> listOfOverlays = mapView.getOverlays();

		
		for (int i = 0; i < geoPoints.size() - 1; i++)
		{
			// Convert the starting geographical point coordinates to screen coordinates.
			//
			GeoPoint startGeoPoint = geoPoints.get(i);
			Point startScreenPoint = new Point ();
			mapView.getProjection().toPixels(startGeoPoint, startScreenPoint);

			// Convert the ending geographical point coordinates to screen coordinates.
			//
			GeoPoint endGeoPoint = geoPoints.get (i + 1);
			Point endScreenPoint = new Point ();
			mapView.getProjection().toPixels(endGeoPoint, endScreenPoint);

			// Draw a joining line between the starting and the ending points.
			//
			Paint paint = new Paint();
			paint.setStrokeWidth(5);
			paint.setAntiAlias(true);
			if ((mode != null) && (mode == Mode.DRIVING)) {
				paint.setARGB(64, 0, 0, 255);
			}
			else {
				paint.setARGB(96, 0, 0, 0);
				paint.setPathEffect(new DashPathEffect(new float[]{8, 4}, 1));
			}
			
			lineObj = new LocationOverlay(startScreenPoint, endScreenPoint, paint);
	        listOfOverlays.add(lineObj);
			//lineObj.draw(canvas, mapView, true);
		}
		
        //listOfOverlays.clear();
		
	}

	@Override
	public void onDirectionsNotAvailable() {
		// TODO Auto-generated method stub
		toastHere("Not Available!");

	}
}
